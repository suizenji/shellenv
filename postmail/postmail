#!/usr/bin/env tclsh

# https://core.tcl-lang.org/tcllib/doc/tcllib-1-18/embedded/www/tcllib/files/modules/cmdline/cmdline.html
package require cmdline

set options {
    {s.arg  ""   "server (default: localhost)"}
    {p.arg  ""   "port (default: 25) smtps:465 smtp/s: 587"}
    {t.arg  ""   "title"}
    {b.arg  ""   "body"}
    {o.arg  ""   "originator(from) (default: $USER@localdomain)"}
    {r.arg  ""   "recipients(to) (required)"}
    {l.arg  "0"  "use tls"}
    {u.arg  ""   "username"}
    {w.arg  ""   "password"}
}
set usage "\[options] filename ...\noptions:"

try {
    array set params [::cmdline::getoptions argv $options $usage]
} trap {CMDLINE USAGE} {msg o} {
    puts $msg
    exit 1
}

if {[expr {$params(r) == ""}]} {
    puts "set recipients."
    exit 2
}

# https://core.tcl-lang.org/tcllib/doc/tcllib-1-19/embedded/www/tcllib/files/modules/mime/smtp.html
### send mail
package require smtp
package require mime

# configure options
set args [list -recipients $params(r)]
if {[expr {$params(s) != ""}]} {lappend args -servers $params(s)}
if {[expr {$params(p) != ""}]} {lappend args -ports $params(p)}
if {[expr {$params(o) != ""}]} {lappend args -originator $params(o)}
if {[expr {$params(u) != ""}]} {lappend args -username $params(u)}
if {[expr {$params(w) != ""}]} {lappend args -password $params(w)}
lappend args -usetls $params(l)

# send
set token [mime::initialize -canonical text/plain -string $params(b)]
mime::setheader $token Subject $params(t)
set result [smtp::sendmessage $token {*}$args]
mime::finalize $token

if {[expr {$result != ""}]} {
    puts stderr $result
    exit 1
}
