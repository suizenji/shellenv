#!/usr/bin/env make -f

help:
	@echo 'usage: command [options..]'
	@echo 'options: prettier, husky, eslint'

### prettier
define PRETTIERRC
{
  "singleQuote": true
}
endef
export PRETTIERRC

prettier: .prettierrc
	npm i -D prettier
.prettierrc:
	echo "$$PRETTIERRC" > $@

### husky
define LINTSTAGEDRC
const path = require('path');

const f = (filenames, join = ' ') =>
  filenames.map((f) => path.relative(process.cwd(), f)).join(join);

const buildEslintCommand = (filenames) =>
  `npx eslint --max-warnings=0 --fix $${f(filenames)}`;

const buildPrettierCommand = (filenames) => `prettier --write $${f(filenames)}`;

module.exports = {
  '*.{js,jsx,ts,tsx}': [
    () => 'tsc --incremental false --noEmit',
    // buildEslintCommand,
    // buildPrettierCommand,
  ],
};
endef
export LINTSTAGEDRC

husky: .husky .husky/pre-commit .lintstagedrc.js
.husky:
	npm install -D husky
	npx husky init
.husky/pre-commit: .husky
	echo 'npx lint-staged' > $@
.lintstagedrc.js:
	echo "$$LINTSTAGEDRC" > $@

### eslint
eslint:
	npm init @eslint/config@latest -- --config eslint-config-standard
