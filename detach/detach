#!/usr/bin/env tclsh

package require cmdline

### opts analyze
# parent analyze
set subcoms {ls detach pop clear help -h}

if {[lsearch $subcoms [lindex $argv 0]] >= 0} {
    set subcom [lindex $argv 0]
    set argv [lrange $argv 1 end]
} else {
    set subcom detach
}

# show help and exit
if {$subcom == "help" || $subcom == "-h"} {
    puts stderr "Usage: $argv0 \[subcom]
subcommands:
	ls:		list detached files
	detach:		detach files (default)
	pop:		pop detached files
	clear:		clear detached files
	help:		show this help"

    exit 1
}

# child analyze
set opts_list {
    ls {
	usage "ls [opts] file.."
	opts {
	    {l "show details"}
	}
    }
    detach {
	usage "[detach] file.."
	opts {}
    }
    pop {
	usage "pop [opts] file.."
	opts {
	    {a "pop all files"}
	}
    }
    clear {
	usage "clear [opts] file.."
	opts {
	    {a "clear all files"}
	}
    }
}

set opts [dict get [dict get $opts_list $subcom] opts]
set usage [dict get [dict get $opts_list $subcom] usage]

try {
    array set params [::cmdline::getoptions argv $opts $usage]
} trap {CMDLINE USAGE} {msg o} {
    puts stderr "$msg"
    exit 1
}

### init
set filepath "~/.detach/config.json"

if {![file exists $filepath]} {
    file mkdir [file dirname $filepath]
    set fp [open $filepath w]
    puts $fp "\[]"
    close $fp
}

### read json file [{org, current}, ..{}]
package require json

set fp [open $filepath r]
set json_string [read $fp]
close $fp

set json_dict [json::json2dict $json_string]

### detach
if {$subcom == "detach"} {
    # get last id

    foreach file $argv {
	# file move
	# lappend config {id, file}
    }

    # write file

    exit
}

# check
proc ls {params core} {
    upvar $params p $core c
    global filepath json_dict
    puts $p(l)
    puts $c
    puts $filepath
    set json_dict {}
}

foreach core $json_dict {
ls params core

continue

    if {$params(l)} {
	puts "[dict get $core id]\t[dict get $core org]"
	continue
    }

    puts $core
    dict for {key value} $core {
	puts "Key: $key"
	puts "Value: $value"
    }
}

# ls
# detach
# pop <id>
# pop-all
# clear <id>
# clear-all
