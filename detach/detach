#!/usr/bin/env tclsh

package require cmdline

### subcom analize
set subcoms {ls detach pop clear help}

if {[lsearch $subcoms [lindex $argv 0]] >= 0} {
    set subcom [lindex $argv 0]
    set argv [lrange $argv 1 end]
} else {
    set subcom detach
}

if {$subcom == "help"} {
    puts stderr "Usage: $argv0 \[subcom]
subcommands:
	ls:		list detached files
	detach:		detach files (default)
	pop:		pop detached files
	clear:		clear detached files
	help:		show this help"

    exit 1
}

exit


set options {
    {l          "list files"}
    {p.arg  ""  "pop a file"}
    {P          "pop all files"}
    {c.arg  ""  "clear a file"}
    {C          "clear all files"}
}
set usage "\[options] filename ...\noptions:"

try {
    array set params [::cmdline::getoptions argv $options $usage]
} trap {CMDLINE USAGE} {msg o} {
    puts $msg
    exit 1
}

### init
set filepath "~/.detach/config.json"

if {![file exists $filepath]} {
    file mkdir [file dirname $filepath]
    set fp [open $filepath w]
    puts $fp "\[]"
    close $fp
}

### read json file [{org, current}, ..{}]
package require json

set fp [open $filepath r]
set json_string [read $fp]
close $fp

set json_dict [json::json2dict $json_string]

# check
foreach core $json_dict {
    if {$params(l)} {
	puts "[dict get $core id]\t[dict get $core org]"
	continue
    }

    puts $core
    dict for {key value} $core {
	puts "Key: $key"
	puts "Value: $value"
    }
}

# detach
# pop <id>
# pop-all
# clear <id>
# clear-all
