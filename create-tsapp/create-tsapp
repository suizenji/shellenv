#!/usr/bin/env bash

SRC=.

parse() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
    -h | --help) FLAG_HELP=1; shift ;;
    --with-src) SRC='./src'; shift ;;
    --) shift; ARGS="$ARGS $@"; break ;;
    *) ARGS="$ARGS $1"; shift ;;
    esac
  done
}
parse "$@"
set -- $ARGS

if [ "$FLAG_HELP" == "1" ]; then
  echo 'usage: command [--with-src] [project]'
  exit
fi

PJ=${1:-tsapp}
SED=$(which gsed >/dev/null && echo gsed || echo sed)

# create a project
mkdir -p "${PJ}"
cd "${PJ}"

test -e package.json && {
  echo 'Project already exists.'
  exit 1
}

# nodejs setup
npm init -y

${SED} -i -f <(cat <<EOF
s:index.js:./dist/index.js:
/"scripts":/ {
  a\    "start": "node ./dist",
  a\    "dev": "NODE_ENV=development npx nodemon --watch './**/*.ts' --exec ts-node ${SRC}/index.ts",
}
EOF
) package.json

npm i -D typescript @types/node ts-node tsconfig-paths tsc-alias nodemon

# tsconfig setup
npx tsc --init --outDir ./dist --incremental true --resolveJsonModule true

${SED} -i -f <(cat <<EOF
/"paths":/ {
  a\    "paths": {
  a\      "@/*": ["${SRC}/*"]
  a\    },
}
/^{/ {
  a\  "ts-node": {
  a\    "require": ["tsconfig-paths/register"]
  a\  },
}
EOF
) tsconfig.json

# builder
cat <<'EOF' > Makefile
build:
	npx tsc
	npx tsc-alias

watch:
	npx tsc -w & \
	npx nodemon --watch dist/**/* --exec 'npx tsc-alias' & \
	wait
EOF

# versioning
touch .gitignore
echo /node_modules >> .gitignore
echo /dist >> .gitignore
git init && git add . && git commit -m 'first commit'

# test
mkdir -p "${SRC}"

echo "import { module } from '@/module'
module();" > "${SRC}/index.ts"

echo "export function module() {
  console.log('happy hacking!');
}" > "${SRC}/module.ts"

make
npm start
